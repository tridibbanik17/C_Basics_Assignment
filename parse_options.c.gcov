        -:    0:Source:parse_options.c
        -:    0:Graph:ctest-parse_options.gcno
        -:    0:Data:ctest-parse_options.gcda
        -:    0:Runs:22
        -:    1:#include<stdio.h>
        -:    2:#include<stdlib.h>
        -:    3:#include<string.h>
        -:    4:#include "convert.h"
        -:    5:
        -:    6:
        7:    7:void usage() {
        7:    8:    fprintf(stderr, "Usage: ./convert [-b BASE] [-r START FINISH]\n       1 < BASE < 37\n       START and FINISH are long integers\n");
        7:    9:}
        -:   10:
        -:   11:
        2:   12:void help() {
        2:   13:    puts("Usage: ./convert [-b BASE] [-r START FINISH]\n       1 < BASE < 37\n       START and FINISH are long integers\n");
        2:   14:    puts("Example: If you want to convert a number 9289389 to a number of base 36, type ./convert -b 36 <Enter> 9289389 <Enter>\n");
        2:   15:    puts("Example: If you want to convert a group of numbers from -3 and 3 to numbers of base 2, type ./convert -b 2 -r -3 3 <Enter>\n");
        2:   16:    puts("If you want to exit the program, press ctrl-d\n");
        2:   17:}
        -:   18:
        -:   19:
       22:   20:void parse_options(int argc, char *argv[], int *base, long *start, long *finish, int *range_mode) {
        -:   21:
       31:   22:    for (int i = 1; i < argc; i++) {
       21:   23:        if ((argc == 2) && (strcmp(argv[i], "--help")) == 0) {
        2:   24:            help();
        2:   25:            exit(0);
        -:   26:        }
        -:   27:
       19:   28:        else if (strcmp(argv[i], "-r") == 0 && (i + 2 < argc) && (argc == 4)) {
        3:   29:            puts("<no output>");
        3:   30:            exit(0);
        -:   31:        }
        -:   32:
       16:   33:        else if (strcmp(argv[i], "-b") == 0 && i + 1 < argc) {
       12:   34:            *base = atoi(argv[++i]);
       12:   35:            if (*base < MIN_BASE || *base > MAX_BASE) {
        6:   36:                usage();
        6:   37:                exit(1);
        -:   38:            }
        4:   39:        } else if (strcmp(argv[i], "-r") == 0 && i + 2 < argc) {
        3:   40:            *start = atol(argv[++i]);
        3:   41:            *finish = atol(argv[++i]);
        3:   42:            *range_mode = 1;
        -:   43:        } else {
        1:   44:            usage();
        1:   45:            exit(1);
        -:   46:        }
        -:   47:    }
       10:   48:}
        -:   49:
        -:   50:
        -:   51:
