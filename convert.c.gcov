        -:    0:Source:convert.c
        -:    0:Graph:ctest-convert.gcno
        -:    0:Data:ctest-convert.gcda
        -:    0:Runs:16
        -:    1:#include <stdio.h>
        -:    2:#include <stdlib.h>
        -:    3:#include "convert.h"
        -:    4:
       34:    5:void convert_number(long number, int base) {
       34:    6:    const char *digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
       34:    7:    if (number < 0) {
        5:    8:        putchar('-');
        5:    9:        number = -number;
        -:   10:    }
       34:   11:    if (number >= base) {
       16:   12:        convert_number(number / base, base);
        -:   13:    }
       34:   14:    putchar(digits[number % base]);
       34:   15:}
        -:   16:
        1:   17:void convert_range(long start, long finish, int base) {
       1*:   18:    long step = (start < finish) ? 1 : -1;
       8*:   19:    for (long i = start; (step > 0) ? i <= finish : i >= finish; i += step) {
        7:   20:        convert_number(i, base);
        7:   21:        printf("\n");
        -:   22:    }
        1:   23:}
